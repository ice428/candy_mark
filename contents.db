{"title":"スニペット","content":"# スニペット\n## jQueryのクリックイベントハンドラ\n```js\nvar handler_name = function(){\n//   handling process\n};\n$('#handler_name').on('click', handler_name);\n```","_id":"4JU2jFCtwi1zsLsq","createdAt":{"$$date":1489673057308},"updatedAt":{"$$date":1489705991267}}
{"title":"RenderTest","content":"# RenderTest\n## 今日の予定\n```py\nimport os\nos.path(x=3)\n\t234.pppp == if365\n```\n```math\nimport os\nos.path(x=3)\n\t234.pppp == if365\n```\n1. list\n- list\n\n**強調**\n\n---\n\n## BlockQuotes\n> 日本語なんかもいけますぜ旦那\n> おいおい何を言っているんだい君は。\n> あれまぁ。\n\n- listはすきかい？\n- いえいえ。やってられませんわぁ。\n\n---\n\n## FlowChart\n```mermaid\ngraph TB\nsubgraph one\na1-->a2\na3-->a5\n\nend\nsubgraph four\nb5-->b7\nend\nsubgraph three\nc1-->c2\nend\nc1-->a2\n```\n---\n\n## 新しいスライドをつくる\n- indexOFや正規表現でhrの個数を数えて、上から何番目のdivを表示すればよいか決めればいいような気が。\n- list\n- index\n","_id":"JgWy5chEua3Icoeb","createdAt":{"$$date":1489939289402},"updatedAt":{"$$date":1490010376561}}
{"title":"アイディア","content":"# アイディア\n## windowsでリソースの仮想化\n- 起動時にサーバースクリプトの実行\n- 必要なリソースへのAPIをwebsocketで実装\n\n## BTZモジュールセットアップ自動化ツール\n\n- まずはスクリプトで適当に自動化を組む\n- シンプルにアトムで適当なプロジェクト作ってスクリプト動かしていく\n\n## 課題\n- 技術部予定登録自動化\n- 設備予約と予定登録の自動化\n","_id":"KiDrhk17m6JzyAWe","createdAt":{"$$date":1489669956738},"updatedAt":{"$$date":1489681195113}}
{"title":"スケジュール","content":"# スケジュール\n## 2017/03/16\n- 変革リーダーワークショップ/10:00-18:00\n- candymark実装\n\n## 課題\n- 技術部予定登録自動化\n- 設備予約と予定登録の自動化\n---\n## チャレンジ\n- エディタをもうちょっとふわっとさせる\n- サイドバーをふわっとさせる\n- 全てを良くなっていくようにする\n\n## 方針を決めていく\n- エディタの背景はグレーにする\n- nodejsの再インストール","_id":"NEiaWnoTMBQ0IKV6","createdAt":{"$$date":1489620127353},"updatedAt":{"$$date":1489951225896}}
{"title":"クラウド同期の検討","content":"# クラウド同期の検討\n\n## Git\n- クラウドにリポジトリを立てて、差分だけ同期ができる\n- プログラマーに好まれそう\n\n## DropBox/GoogleDrive\n- JavascriptAPIが用意されていて、Syncも比較的容易そう\n- ただし、Fileベースなので同期に時間がかからないか？\n- ローカルはデータベースの格納Pathを指定出来るようにする？\n---\n## FireBase\n- 今回のようなアプリには向いていると思う\n- シンプルにデータベースだけをAPIで共有できる\n\n## Google Cloud Platform\n- GCPで開発すれば、アプリはwebviewだけで済む\n- コードも統一出来る\n- 機械学習へと進める\n","_id":"VQFgCajtV83Pxoyp","createdAt":{"$$date":1489807342123},"updatedAt":{"$$date":1489951211751}}
{"title":"CandyMark","content":"# CandyMark\n\n---\n## 実行中のタスク\n- ~~delのショートカットをスラッシュに切り替える~~\n- ~~起動時にtextboxが見えてしまう。~~\n- ~~起動時動作の整理~~\n- ~~CSSの統一~~\n- ~~あさごはん~~\n- ~~listのinner-->outer~~\n- ★画像管理機能-->DropBox?GoogleDrive?\n- ★クラウド同期-->DropBox?GoogleDrive?\n- 同期ドライブのパスを指定できるようにする\n- ★modalを実装してとりあえずパス指定できるように。\n\n---\n## バグ\n- スライドのPDF出力レイアウトが崩れる\n- スライド編集中に表示がチラつく-->javascriptで書く？\n- スクロールが先頭に戻らない\n- mermaidの高さやサイズが合わない\n- ~~スクロール同期バグ~~\n\n---\n## 将来\n- html出力\n- テーマ切替\n- タグ管理機能\n- react.jsで書き直し\n- sassで書き直し\n- 丸めのフォント対応\n- スプラッシュスクリーン\n- ★codemirrorのsearch機能\n- ~~UIのアニメーション~~\n\n---\n\n## 思考のフレームワーク\n- 思考の整理：Xmind-->自作アプリへ\n- ブレスト：Evernote-->CandyMark\n- タスク管理：Wunderlist-->自作アプリへ\n- Editor：Atom\n- GitTool-->自分でつくる","_id":"ZYD4MGxxbMuFwFH8","createdAt":{"$$date":1489543589526},"updatedAt":{"$$date":1490018037307}}
{"title":"テスト","content":"# Mermaid テスト\n```mermaid\ngraph LR\na-->b\nb-->c\nd-->c\nc-->a\nb-->d\nd-->a\ne-->g\ng-->l\n```\nこんなのがあったとしよう\n\n---\n\nほげえ","_id":"dHkXbsJitGKR13g1","createdAt":{"$$date":1490024277574},"updatedAt":{"$$date":1490024576203}}
{"title":"自宅用","content":"# 自宅用\n- 柔軟剤\n- 液体洗剤\n- バウンシア","_id":"fbQehNO1TgqKfYqB","createdAt":{"$$date":1489681707869},"updatedAt":{"$$date":1489681773014}}
{"title":"Example","content":"# Example\n\n---\n\n## Introduction\n\n---\n\n## Table\n|Left|Right|Center|\n|:-|:-:|-:|\n|This|This|This|\n|column|column |column|\n|will|will|will|\n|be|be|be|\n|left|right|center|\n|aligned|aligned|aligned|\n\n---\n\n## KATeX\n```math\nc = \\pm\\sqrt{a^2 + b^2}\n```\n\n---\n\n## FlowChart\n```mermaid\ngraph TB\n         subgraph one\n         a1-->a2\n\t\t a3-->a5\n         end\n         subgraph two\n         b1-->b2\n         end\n         subgraph three\n         c1-->c2\n         end\n         c1-->a2\n```\n---\n## SequenceChart\n```mermaid\nsequenceDiagram\n    Alice->>+John: Hello John, how are you?\n    Alice->>+John: John, can yoy hear me?\n    John-->>-Alice: Hi Alice, I can hear you!\n    John-->>-Alice: I feel great!\n```\n---\n## GanttChart\n```mermaid\ngantt\n    title A Gantt Diagram\n\n    section Section\n    A task           :a1, 2014-01-01, 30d\n    Another task     :after a1  , 20d\n    section Another\n    Task in sec      :2014-01-12  , 12d\n    anther task      : 24d\n```\n---\n## CodeBlock\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nX = np.linspace(-np.pi, np.pi, 256, endpoint=True)\nC, S = np.cos(X), np.sin(X)\n\nplt.plot(X, C)\nplt.plot(X, S)\n\nplt.show()\n```","_id":"gUgQTNXk6RpDXs6n","createdAt":{"$$date":1489680793894},"updatedAt":{"$$date":1490011905972}}
{"title":"積算処理","content":"# 積算処理\n\n重量処理のうち、**積算処理** と呼ばれている部分について調べてみます。\n\n## 対象のコード\n\ncj.cppの5233行目付近\n\n```c++\n// 積算処理が正常終了していれば実行\nif(total(theWdbas) == 1){\n  // 積算回数の指定値をワーク変数に格納\n  INT2 theWk = g_wrResPa.m_INTCT;\n\n  // ワークの7bit目が立っていない間ループする\n  while(!ISBIT(7,theWk)){\n    // ワークを左に1bitシフト\n    theWk <<= 1;\n    // グローバルの積算値も1bit左にシフト\n    g_itTotal.m_wddat <<= 1;\n  }\n\n  // 積算値を32bit右にシフトして、前回の積算値保存エリアに格納\n  g_itTotal.m_sumBefore = int(g_itTotal.m_wddat >> 32);\n\n  // 重量後処理が完了していない時に実行\n  if(!g_bWnCompletSecond){\n    //\n    g_wddat = g_itTotal.m_wddat;\n    g_INTCT = g_wrResPa.m_INTCT;\n    FLG_ON(g_bWnCompletSecond);\n  }\n\n  // 積算値初期化\n  g_itTotal.m_wnCnt = 0;          // 積算回数クリア\n  g_itTotal.m_wddat = 0;          // 積算値クリア\n  g_itTotal.m_bBanChgCnt = false; // 大変動検知フラグ クリア\n}\n```\n\n## 解説する変数/関数のリスト\n\n**関数**\n\n- total\n\n**変数**\n\n- theWdbas\n- g_wrResPa\n- theWk\n- g_bWnCompletSecond\n\n## theWdbas\n`cj.cpp`5196行目付近\n>```c++\n    // ---< 前処理よりデータ受取 >---\n    INT8 theWdbas = g_ifFirst.m_wdbasComp;\n    FLG_OFF(g_bWnCompletFirst);\n```\n\ng_ifFirst.m_wdbasCompが入っているみたい。\n\n**じゃあ、g_ifFirstって？**\n\n`global.h`42行目付近を見ると・・\n>```c++\nGLOBAL IntrFirstMemory      g_ifFirst;  // 重量前処理変数\n```\n\nIntrFirstMemoryクラスのインスタンスらしい。\n\n**IntrFirstMemoryクラス**\n\n`typedef.h`663行目付近\n>```c++\n//**************************************************\n// 機能概要: 重量,割込み前処理 変数記憶構造体\n//**************************************************\nclass IntrFirstMemory\n{\npublic:\n    INT4 m_woicr;        // キャプチャ前回値\n    INT4 m_wdbas;        // 積算値\n    INT4 m_wdbasComp;    // 積算終了値\n    INT2 m_wnCnt;        // 積算カウンタ (n波), 減算式\npublic:\n    IntrFirstMemory( void )\n        :m_woicr(0),m_wdbas(0),m_wdbasComp(0),m_wnCnt(0) {;}\n};\n```\n\nつまり、`theWdbas`には、重量処理のうち、前処理の積算終了値が放り込まれてるみたいですね。\n\n## total関数\n\n>```c++\n//*****************************************************************************\n// 機能概要: 積算処理\n// 処理内容:\n// 引数(入力): in_wdbas   周波数を表すｶｳﾝﾄ値 (注! 積算の前の右シフトしない事)\n// 戻り値: == 0        正常終了。積算終了せず。\n// 戻り値: == 1        正常終了。積算も終了。\n// 戻り値: ==-1        異常終了。Error処理済。よって、return後の処理は不要。\n// 外部変数(入力):   g_wrResPa.m_wINTCT   積算値初期値\n// 外部変数(入出力): g_itTotal            積算処理記憶構造体\n// 呼び出し関数: sharpChange()\n//*****************************************************************************\nint total(INT8 in_wdbas){\nif(!g_itTotal.m_bBanChgCnt){    // if 積算回数変更禁止Flag==OFF then\n        // 大変動検出\n        // ここでは in_wdbas の上4byteを対象に演算している\n        //- c = 新 - 旧 (正規化済)\n        INT4 theWk = (in_wdbas >> 25) + (in_wdbas >> 27) - g_itTotal.m_sumBefore;\n        // 差の絶対値を計算する\n        theWk = abs(theWk);\n        if(theWk > HENDI){                    //  大変動?\n            // 大変動時の処理\n            g_wrResPa.m_INTCT  = HENINO;        // 大変動時積算回数設定\n            g_itTotal.m_wnCnt  = 0;             // 積算回数 クリア\n            g_itTotal.m_wddat  = 0;             // 積算値   クリア\n            g_itTotal.m_bBanChgCnt = true;      // 積算回数変更禁止Flag <- ON\n            g_wrResPa.m_DGFIL1 = g_wrResPa.m_DGFIL2 = g_wrResPa.m_DGFIL_DAI; //-デジフィル変更\n            g_ct2BkZ_unExe.start( BKZUNEXEINT );\n            g_ct2BkZ_exe.start( BKZEXEINT );\n            g_ct2BkZ3_unExe.start( BKZ3UNEXEINT );\n        }\n    }\n    g_itTotal.m_wddat += in_wdbas;\n    ++g_itTotal.m_wnCnt;\n    if(g_itTotal.m_wnCnt==g_wrResPa.m_INTCT){     // 積算終了?\n        // 積算値を正規化\n        // 積算値･積算カウンタのクリア等の処理は外部で行う\n        return 1;                                   // 正常終了, 積算も終了\n    }\n    else{\n        // 積算のみを行った場合\n        return 0;\n    }\n}\n```\n\n## ISBIT関数\n\n```c++\n/**********************************************************************\n＊引数の指定位置のbitが、立っているかどうかを参照するマクロ関数\n＊nBP：bit位置(0～31)\n＊nVal：数値【int型】\n＊0又は0でない値が返る→何のため？\n**********************************************************************/\ninline bool ISBIT(int nBP, int nVal){\n  return nVal & (1 << nBP);\n}\n```\n\n- 変数の、指定位置のbitが立っているかどうかを見る\n- falseまたは0以外の数値が返ってくる\n\n\n## g_wrResPa\nコメントによると、応答速度関連変数とのこと。\n\nglobal.hの44行目付近\n\n>```c++\nGLOBAL WeightResParam       g_wrResPa;  // 応答速度関連変数\n```\n\n**WeightResParam**\n\ntypedef.hの641行目付近\n\n>```c++\n//*****************************************************************************\n// 機能概要: 重量処理の応答速度の関するパラメータ記憶構造体\n// 処理内容: * 主に割込み指定部分。平場で使う部分もかなり先頭で使用する。\n// 処理内容: 注!! 平場でセットし割込みが参照する構造体。Lockフラグのようなものは\n// 処理内容:      入れていないので、メンバの書換え時は一発で書換えること。\n//*****************************************************************************\ntypedef struct {\n    bool  m_bBanChgCnt;      // 積算回数変更不可指定\n    INT2 m_DGFIL1;          // デジタルフィルター係数1\n    INT2 m_DGFIL2;          // デジタルフィルター係数2\n    INT2 m_DGFIL_DAI;       // デジタルフィルター係数大変動時\n    INT2 m_IDO;             // 移動平均指定     // ##SJT604 SJT515同等に改造\n    INT2 m_INTCT;           // 積算回数指定\n} WeightResParam;\n```\n\n**結論**\n\nつまり、g_wrResPaは\n\n- 応答速度に関するパラメータを集めている\n- デジタルフィルターの係数を持っている\n- 移動平均の指定？がされている\n- 積算回数の指定がされている\n\nということらしい。\n\n## g_itTotal\nコメントによると、積算処理構造体とのこと。\n\nglobal.hの44行目付近\n\n>```c++\nGLOBAL IntrTotal            g_itTotal;  // 積算処理\n```\n\n**IntrTotal**\n\ntypedef.hの711行目付近\n\n>```c++\n//******************************************************************\n// 機能概要: 重量割込み積算処理変数記憶構造体\n// Prifix: it\n// SIZE  :\n//******************************************************************\ntypedef struct {\n    INT8 m_wddat;       // 出力の積算値, 周波数 (WNCTILATER 回分, 現160回)\n    INT4 m_sumBefore;   // 前回積算値 (大変動比較用, 前回値の上4byteのみ)\n    INT2 m_wnCnt;       // 積算カウンタ (n回)\n    bool m_bBanChgCnt;  // 積算回数変更不可指定\n} IntrTotal;\n```\n\n**結論**\n\ng_itTotalは\n\n- 応答速度に関するパラメータを集めている\n- デジタルフィルターの係数を持っている\n- 移動平均の指定？がされている\n- 積算回数の指定がされている\n\nということらしい。\n\n## g_bWnCompletSecond\n\n重量後処理\n\n## g_wddat\n\nglobal.hの74行目\n\n>```c++\nGLOBAL volatile INT8  g_wddat   GLOBAL_VAL(0);  // 重量 割込み処理後データ\n```\n\n割込み後処理後の重量値が入っている模様\n\n## g_INTCT\n\nglobal.hの76行目\n\n>```c++\nGLOBAL volatile INT2  g_INTCT           GLOBAL_VAL(0);     // 積算回数平場受渡\n```\n\n割込みとメインスレッドの間で、積算回数を共有するためのバッファ\n","_id":"q5KkMW0QL3lKpu1o","createdAt":{"$$date":1489714084304},"updatedAt":{"$$date":1489714084304}}
{"title":"メモ","content":"# メモ\n- 本当に保存できるのか？\n\n---\n## 高田香料さん\n- FZ/FJ両方で振動が気になる\n- GZ-2:200kg\n- ドラム缶\n- gz-210秒\n- fz-2分\n- 隣にメトラーもある\n- 皿の歪等による\n- 液面を揺らした状態\n- FZの問題？","_id":"tim6Ssko13nIWjdj","createdAt":{"$$date":1489595902030},"updatedAt":{"$$date":1490017808470}}
